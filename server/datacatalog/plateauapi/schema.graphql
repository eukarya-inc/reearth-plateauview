# Base

interface Node {
  id: ID!
}

# Area

interface Area implements Node {
  id: ID!
  code: String!
  name: String!
  parents: [Area!]!
}

input DatasetForAreaQuery {
  excludeTypes: [String!]
  includeTypes: [String!]
  searchTokens: [String!]
}

type Country implements Area & Node {
  id: ID!
  code: String!
  name: String!
  parents: [Area!]!

  prefectures: [Prefecture!]!
  datasets(input: DatasetForAreaQuery!): [Dataset!]!
}

type Municipality implements Area & Node {
  id: ID!
  code: String!
  name: String!
  parents: [Area!]!

  prefecture: Prefecture!
  datasets(input: DatasetForAreaQuery!): [Dataset!]!
}

type Prefecture implements Area & Node {
  id: ID!
  code: String!
  name: String!
  parents: [Area!]!

  municipalities: [Municipality!]!
  datasets(input: DatasetForAreaQuery!): [Dataset!]!
}

# Dataset

interface Dataset implements Node {
  id: ID!
  name: String!
  description: String
  year: Int!
  groups: [String!]
  data: [DatasetDatum!]!
  area: Area
}

interface DatasetDatum implements Node {
  id: ID!
  format: DatasetFormat!
  name: String!
  url: String!
  layers: [String!]
  parent_id: ID!
  parent: Dataset
}

enum DatasetFormat {
  CSV
  CZML
  Cesium3DTiles
  GLTF
  GTFSRelatime
  GeoJSON
  MVT
  TMS
  Tiles
  WMS
}

interface DatasetType implements Node {
  id: ID!
  code: String!
  name: String!
  englishName: String!
  category: DatasetTypeCategory!
}

enum DatasetTypeCategory {
  Plateau
  PlateauAuxiliary
  Generic
}

# PLATEAU dataset

# TODO: river data
type PlateauDataset implements Dataset & Node {
  id: ID!
  name: String!
  description: String
  year: Int!
  groups: [String!]
  area_id: ID!
  area: Area
  type_id: ID!
  type: PlateauDatasetType!
  data: [PlateauDatasetDatum!]!
}

type PlateauDatasetDatum implements DatasetDatum & Node {
  id: ID!
  format: DatasetFormat!
  name: String!
  url: String!
  layers: [String!]
  parent_id: ID!
  parent: PlateauDataset

  lod: Float!
  textured: Boolean!
}

type PlateauDatasetType implements DatasetType & Node {
  id: ID!
  code: String!
  name: String!
  englishName: String!
  category: DatasetTypeCategory!

  plateauVersion: String!
  year: Int!
}

# PLATEAU auxiliary dataset

type PlateauAuxiliaryDataset implements Dataset & Node {
  id: ID!
  name: String!
  description: String
  year: Int!
  groups: [String!]
  area_id: ID!
  area: Area
  type_id: ID!
  type: PlateauAuxiliaryDatasetType
  data: [PlateauAuxiliaryDatasetDatum!]!
}

type PlateauAuxiliaryDatasetDatum implements DatasetDatum & Node {
  id: ID!
  format: DatasetFormat!
  name: String!
  url: String!
  layers: [String!]
  parent_id: ID!
  parent: PlateauAuxiliaryDataset
}

type PlateauAuxiliaryDatasetType implements DatasetType & Node {
  id: ID!
  code: String!
  name: String!
  englishName: String!
  category: DatasetTypeCategory!
}

# Generic

type GenericDataset implements Dataset & Node {
  id: ID!
  name: String!
  description: String
  year: Int!
  groups: [String!]
  area_id: ID!
  area: Area
  type_id: ID!
  type: GenericDatasetType
  data: [GenericDatasetDatum!]!
}

type GenericDatasetDatum implements DatasetDatum & Node {
  id: ID!
  format: DatasetFormat!
  name: String!
  url: String!
  layers: [String!]
  parent_id: ID!
  parent: GenericDataset
}

type GenericDatasetType implements DatasetType & Node {
  id: ID!
  code: String!
  name: String!
  englishName: String!
  category: DatasetTypeCategory!
}

# Queries

input AreaQuery {
  parentCode: String!
  datasetTypes: [String!]
  searchTokens: [String!]
}

input DatasetTypeQuery {
  category: DatasetTypeCategory
  plateauVersion: String
  year: Int
}

input DatasetQuery {
  areaCodes: [String!]
  excludeTypes: [String!]
  includeTypes: [String!]
  searchTokens: [String!]
}

type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node!]!
  area(code: String!): Area
  areas(input: AreaQuery!): [Area!]!
  datasetTypes(input: DatasetTypeQuery!): [DatasetType!]!
  datasets(input: DatasetQuery!): [Dataset!]!
  plateauVersions: [String!]!
  years: [Int!]!
}

# enum PlateauDatasetType {
#   Bridge
#   Building
#   CityFurniture
#   GenericCityObject
#   HighTideRisk
#   InlandFloodingRisk
#   LandSlideRisk
#   LandUse
#   RiverFloodingRisk
#   Road
#   TsunamiRisk
#   UrbanPlanning
#   Vegetation
# }

# enum PlateauAuxiliaryDatasetType {
#   Border
#   EmergencyRoute
#   Landmark
#   Park
#   Railway
#   Shelter
#   Station
# }
