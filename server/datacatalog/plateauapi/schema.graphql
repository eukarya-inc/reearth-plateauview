# Base

interface Node {
  id: ID!
}

# Area

interface Area implements Node {
  id: ID!
  code: String!
  name: String!
  parents: [Area!]!
}

input DatasetForAreaQuery {
  excludeTypes: [String!]
  includeTypes: [String!]
  searchTokens: [String!]
}

type Country implements Area & Node {
  id: ID!
  code: String!
  name: String!
  parents: [Area!]!

  prefectures: [Prefecture!]!
  datasets(input: DatasetForAreaQuery!): [Dataset!]!
}

type Municipality implements Area & Node {
  id: ID!
  code: String!
  name: String!
  parents: [Area!]!

  prefecture: Prefecture!
  datasets(input: DatasetForAreaQuery!): [Dataset!]!
}

type Prefecture implements Area & Node {
  id: ID!
  code: String!
  name: String!
  parents: [Area!]!

  municipalities: [Municipality!]!
  datasets(input: DatasetForAreaQuery!): [Dataset!]!
}

# Spec

type PlateauSpec implements Node {
  id: ID!
  name: String!
  year: Int!
}

# Dataset

interface Dataset implements Node {
  id: ID!
  name: String!
  subname: String
  description: String
  year: Int!
  groups: [String!]
  data: [DatasetItem!]!
  area: Area
}

interface DatasetItem implements Node {
  id: ID!
  format: DatasetFormat!
  name: String!
  url: String!
  layers: [String!]
  parent_id: ID!
  parent: Dataset
}

enum DatasetFormat {
  CSV
  CZML
  Cesium3DTiles
  GLTF
  GTFSRelatime
  GeoJSON
  MVT
  TMS
  Tiles
  WMS
}

interface DatasetType implements Node {
  id: ID!
  code: String!
  name: String!
  englishName: String!
  category: DatasetTypeCategory!
}

enum DatasetTypeCategory {
  Plateau
  Related
  Generic
}

# PLATEAU dataset

# PLATEAU都市モデルの通常のデータセット。例えば、地物型が建築物モデル（bldg）などのデータセットです。
type PlateauDataset implements Dataset & Node {
  id: ID!
  name: String!
  subname: String
  description: String
  year: Int!
  groups: [String!]
  area_id: ID!
  area: Area
  type_id: ID!
  type: PlateauDatasetType!
  data: [PlateauDatasetItem!]!
}

type PlateauDatasetItem implements DatasetItem & Node {
  id: ID!
  format: DatasetFormat!
  name: String!
  url: String!
  layers: [String!]
  parent_id: ID!
  parent: PlateauDataset

  lod: Float
  texture: Texture
}

enum Texture {
  NONE
  LOW_RESOLUTION
  HIGH_RESOLUTION
}

# PLATEAU都市モデルのデータセットのうち、地物型が洪水・高潮・津波・内水浸水想定区域モデル（fld, htd, tnm, ifld のいずれか）のデータセットです。
type PlateauFloodingDataset implements Dataset & Node {
  id: ID!
  name: String!
  subname: String
  description: String
  year: Int!
  groups: [String!]
  area_id: ID!
  area: Area
  type_id: ID!
  type: PlateauDatasetType!
  data: [PlateauFloodingDatasetItem!]!

  # 河川。地物型が洪水浸水想定区域（fld）の場合のみ存在します。
  river: River
}

type PlateauFloodingDatasetItem implements DatasetItem & Node {
  id: ID!
  format: DatasetFormat!
  name: String!
  url: String!
  layers: [String!]
  parent_id: ID!
  parent: PlateauDataset

  # 浸水規模
  floodingScale: FloodingScale!
}

# 河川
type River {
  # 河川名。「〜〜水系〜〜川」という形式になります。
  name: String!
  # 管理区間
  admin: RiverAdmin!
}

# 河川の管理区間
enum RiverAdmin {
  # 国管理区間
  NATION
  # 都道府県管理区間
  PREFECTURE
}

# 浸水規模
enum FloodingScale {
  # 計画規模
  PLANNED
  # 想定最大規模
  EXPECTED_MAXIMUM
}

type PlateauDatasetType implements DatasetType & Node {
  id: ID!
  code: String!
  name: String!
  englishName: String!
  category: DatasetTypeCategory!

  plateauSpec: PlateauSpec!
  year: Int!
}

# related dataset

type RelatedDataset implements Dataset & Node {
  id: ID!
  name: String!
  subname: String
  description: String
  year: Int!
  groups: [String!]
  area_id: ID!
  area: Area
  type_id: ID!
  type: RelatedDatasetType
  data: [RelatedDatasetItem!]!
}

type RelatedDatasetItem implements DatasetItem & Node {
  id: ID!
  format: DatasetFormat!
  name: String!
  url: String!
  layers: [String!]
  parent_id: ID!
  parent: RelatedDataset
}

type RelatedDatasetType implements DatasetType & Node {
  id: ID!
  code: String!
  name: String!
  englishName: String!
  category: DatasetTypeCategory!
}

# Generic

type GenericDataset implements Dataset & Node {
  id: ID!
  name: String!
  subname: String
  description: String
  year: Int!
  groups: [String!]
  area_id: ID!
  area: Area
  type_id: ID!
  type: GenericDatasetType
  data: [GenericDatasetItem!]!
}

type GenericDatasetItem implements DatasetItem & Node {
  id: ID!
  format: DatasetFormat!
  name: String!
  url: String!
  layers: [String!]
  parent_id: ID!
  parent: GenericDataset
}

type GenericDatasetType implements DatasetType & Node {
  id: ID!
  code: String!
  name: String!
  englishName: String!
  category: DatasetTypeCategory!
}

# Queries

input AreaQuery {
  parentCode: String!
  datasetTypes: [String!]
  searchTokens: [String!]
}

input DatasetTypeQuery {
  category: DatasetTypeCategory
  plateauSpec: String
  year: Int
}

input DatasetQuery {
  areaCodes: [String!]
  excludeTypes: [String!]
  includeTypes: [String!]
  searchTokens: [String!]
}

type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node!]!
  area(code: String!): Area
  areas(input: AreaQuery!): [Area!]!
  datasetTypes(input: DatasetTypeQuery!): [DatasetType!]!
  datasets(input: DatasetQuery!): [Dataset!]!
  plateauSpecs: [PlateauSpec!]!
  years: [Int!]!
}

# enum PlateauDatasetType {
#   Bridge
#   Building
#   CityFurniture
#   GenericCityObject
#   HighTideRisk
#   InlandFloodingRisk
#   LandSlideRisk
#   LandUse
#   RiverFloodingRisk
#   Road
#   TsunamiRisk
#   UrbanPlanning
#   Vegetation
# }

# enum RelatedDatasetType {
#   Border
#   EmergencyRoute
#   Landmark
#   Park
#   Railway
#   Shelter
#   Station
# }
